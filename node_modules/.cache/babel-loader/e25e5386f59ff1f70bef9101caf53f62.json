{"ast":null,"code":"var _jsxFileName = \"/Users/taekyoungkwon/epidemic-watch/src/Info.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Chart from \"react-google-charts\";\nimport Tile from \"./Tiles.js\";\n\nclass Maps extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // State to hold JSON data\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  /**\n   * Fetches data from API and loads state.\n   */\n  componentDidMount() {\n    fetch('https://covidtracking.com/api/us').then(res => res.json()).then(data => {\n      this.setState({\n        items: data,\n        isLoaded: true\n      });\n    });\n  }\n  /**\n   * Renders map using google chart\n   *\n   * @return {html} html to render.\n   */\n\n\n  render() {\n    var {\n      items,\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      // Check if data is loaded\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      id: \"stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Tile, {\n      link: \"\",\n      image: \"\",\n      title: \"hello\",\n      category: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Tile, {\n      link: \"\",\n      image: \"\",\n      title: \"hello\",\n      category: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Tile, {\n      link: \"\",\n      image: \"\",\n      title: \"hello\",\n      category: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Maps;","map":{"version":3,"sources":["/Users/taekyoungkwon/epidemic-watch/src/Info.js"],"names":["React","Component","Chart","Tile","Maps","state","items","isLoaded","componentDidMount","fetch","then","res","json","data","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBI,KAFyB,GAEjB;AAAQ;AACZC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAFiB;AAAA;;AAOzB;;;AAGAC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAEO,IADG;AAEVN,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIH,KAPL;AAQH;AACD;;;;;;;AAKAQ,EAAAA,MAAM,GAAG;AACL,QAAI;AAAET,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKF,KAA/B;;AAEA,QAAI,CAACE,QAAL,EAAe;AAAI;AACf,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAGD,WACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAC,EADT;AAEI,MAAA,KAAK,EAAC,EAFV;AAGI,MAAA,KAAK,EAAC,OAHV;AAII,MAAA,QAAQ,EAAC,EAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAC,EADT;AAEI,MAAA,KAAK,EAAC,EAFV;AAGI,MAAA,KAAK,EAAC,OAHV;AAII,MAAA,QAAQ,EAAC,EAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAaI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAC,EADT;AAEI,MAAA,KAAK,EAAC,EAFV;AAGI,MAAA,KAAK,EAAC,OAHV;AAII,MAAA,QAAQ,EAAC,EAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ;AAsBH;;AAvDwB;;AA0D7B,eAAeH,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Chart from \"react-google-charts\";\nimport Tile from \"./Tiles.js\"\n\nclass Maps extends Component {\n\n    state = {       // State to hold JSON data\n        items: [],\n        isLoaded: false,\n    }\n\n    /**\n     * Fetches data from API and loads state.\n     */\n    componentDidMount() {\n        fetch('https://covidtracking.com/api/us')\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    items: data,\n                    isLoaded: true,\n                })\n            });\n    }\n    /**\n     * Renders map using google chart\n     *\n     * @return {html} html to render.\n     */\n    render() {\n        var { items, isLoaded } = this.state;\n\n        if (!isLoaded) {   // Check if data is loaded\n            return <div>Loading...</div>\n        }\n\n        \n        return (\n            <div id=\"stats\">\n                <Tile\n                    link=\"\"\n                    image=\"\"\n                    title=\"hello\"\n                    category=\"\"\n                />\n                <Tile\n                    link=\"\"\n                    image=\"\"\n                    title=\"hello\"\n                    category=\"\"\n                />\n                <Tile\n                    link=\"\"\n                    image=\"\"\n                    title=\"hello\"\n                    category=\"\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default Maps;"]},"metadata":{},"sourceType":"module"}